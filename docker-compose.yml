networks:
  app-net:
    driver: bridge

services:
  db:
    container_name: hazelcast-poc-db
    image: mariadb:11.6
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
    networks:
      - app-net
    volumes:
      - db-data:/var/lib/mysql
    restart: always
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    container_name: hazelcast-poc-api
    build:
      context: ./api
    image: alexdevvv/portfolio-api:latest
    networks:
      - app-net
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://db:3306/${MARIADB_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${MARIADB_USER}
      SPRING_DATASOURCE_PASSWORD: ${MARIADB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    restart: always

  web:
    container_name: hazelcast-poc-web
    build:
      context: ./web
    image: alexdevvv/hazelcast-poc-web:latest
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}
      ENABLE_SSL: ${ENABLE_SSL:-false}
    ports:
      - "3000:80"
      - "3443:443"
    networks:
      - app-net
    depends_on:
      api:
        condition: service_started
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-webroot:/var/www/certbot
    restart: always

  certbot:
    image: certbot/certbot:latest
    container_name: hazelcast-poc-certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-webroot:/var/www/certbot
    entrypoint: ["/bin/sh", "-c"]
    command: "sleep infinity"
    networks:
      - app-net

volumes:
  db-data:
  certbot-etc:
  certbot-webroot:
